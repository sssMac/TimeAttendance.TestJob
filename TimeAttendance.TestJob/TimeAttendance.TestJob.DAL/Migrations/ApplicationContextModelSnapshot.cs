// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeAttendance.TestJob.DAL.Data;

#nullable disable

namespace TimeAttendance.TestJob.DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeAttendance.TestJob.DAL.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("856713bf-a538-4613-81b3-72b0de4052d0"),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1839),
                            ProjectName = "project-1",
                            UpdateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1824)
                        },
                        new
                        {
                            Id = new Guid("a9aa8f74-9c63-4d5b-a54a-a2e8f57b64d3"),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1846),
                            ProjectName = "project-2",
                            UpdateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1845)
                        },
                        new
                        {
                            Id = new Guid("02e97f33-9a1d-479a-82fd-279e0f9ed417"),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1848),
                            ProjectName = "project-3",
                            UpdateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1847)
                        });
                });

            modelBuilder.Entity("TimeAttendance.TestJob.DAL.Models.SmallTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("SmallTasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a336963-926a-4302-8e77-89f849dfdfdb"),
                            CancelDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1853),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1853),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = new Guid("856713bf-a538-4613-81b3-72b0de4052d0"),
                            StartDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1852),
                            TaskName = "task-1"
                        },
                        new
                        {
                            Id = new Guid("4dfd1d8d-3806-4b1a-b0f3-8b8a032d79b1"),
                            CancelDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1857),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1857),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = new Guid("856713bf-a538-4613-81b3-72b0de4052d0"),
                            StartDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1856),
                            TaskName = "task-2"
                        },
                        new
                        {
                            Id = new Guid("de3fe344-dac7-4aec-a143-fc693ea02930"),
                            CancelDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1860),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1860),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = new Guid("856713bf-a538-4613-81b3-72b0de4052d0"),
                            StartDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1859),
                            TaskName = "task-3"
                        },
                        new
                        {
                            Id = new Guid("ee18698e-c04a-4ddd-a6ab-87d44aaffa46"),
                            CancelDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1874),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1875),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = new Guid("a9aa8f74-9c63-4d5b-a54a-a2e8f57b64d3"),
                            StartDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1874),
                            TaskName = "task-14234"
                        },
                        new
                        {
                            Id = new Guid("d48ffc99-2e39-4c81-832d-638418e07bf3"),
                            CancelDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1937),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1938),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = new Guid("a9aa8f74-9c63-4d5b-a54a-a2e8f57b64d3"),
                            StartDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1937),
                            TaskName = "task-14234"
                        },
                        new
                        {
                            Id = new Guid("c9855d12-4624-4969-b72c-57a2da129043"),
                            CancelDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1943),
                            CreateDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1944),
                            DeleteDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ProjectId = new Guid("02e97f33-9a1d-479a-82fd-279e0f9ed417"),
                            StartDate = new DateTime(2022, 11, 13, 2, 45, 1, 391, DateTimeKind.Local).AddTicks(1943),
                            TaskName = "task-777"
                        });
                });

            modelBuilder.Entity("TimeAttendance.TestJob.DAL.Models.TaskComments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("CommentType")
                        .HasColumnType("tinyint");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("TasksComments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3cd88b1f-27ae-4e1c-953d-34610a5ab8a6"),
                            CommentType = (byte)0,
                            Content = new byte[] { 104, 101, 108, 108, 111, 32, 116, 97, 115, 107, 51, 50, 49 },
                            TaskId = new Guid("9a336963-926a-4302-8e77-89f849dfdfdb")
                        },
                        new
                        {
                            Id = new Guid("d65e4d48-95ab-4613-99fe-32edfe561226"),
                            CommentType = (byte)0,
                            Content = new byte[] { 104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100 },
                            TaskId = new Guid("9a336963-926a-4302-8e77-89f849dfdfdb")
                        },
                        new
                        {
                            Id = new Guid("5db8db0e-40a3-4254-af7c-833ce8ce71d5"),
                            CommentType = (byte)1,
                            Content = new byte[] { 104, 101, 108, 108, 111, 32, 112, 114, 111, 106, 101, 99, 116 },
                            TaskId = new Guid("4dfd1d8d-3806-4b1a-b0f3-8b8a032d79b1")
                        },
                        new
                        {
                            Id = new Guid("c64fbc14-80fc-48d8-b161-e2dfc8dc7330"),
                            CommentType = (byte)22,
                            Content = new byte[] { 104, 101, 108, 108, 111, 32, 116, 97, 115, 107, 51, 50, 51, 49, 50, 51, 49 },
                            TaskId = new Guid("d48ffc99-2e39-4c81-832d-638418e07bf3")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
